{
  "openapi": "3.0.3",
  "info": {
    "title": "WithSecure Atlant Management API",
    "description": "WithSecure Atlant is platform for building applications that can detect malicious files. Management API is responsible for managing the configuration of the platform. This API is used to manage clients, update the product, and configure the platform.",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Clients",
      "description": "Operations related to configuring clients."
    },
    {
      "name": "Update",
      "description": "Operations related to product updates."
    },
    {
      "name": "License",
      "description": "Operations related to configure platform license."
    },
    {
      "name": "Authorization",
      "description": "Operations related to configure authorization endpoints"
    },
    {
      "name": "fsanalyze",
      "description": "Operations related to configure fsanalyze default settings"
    },
    {
      "name": "Http proxy",
      "description": "Operations related to configure http proxy settings"
    },
    {
      "name": "Management",
      "description": "Operations related to configure management endpoints"
    },
    {
      "name": "Online services",
      "description": "Operations related to configure online services settings"
    },
    {
      "name": "Scanning",
      "description": "Operations related to configure HTTPS and ICAP APIs scanning settings"
    },
    {
      "name": "Logging",
      "description": "Operations related to configure logging settings for HTTPS and ICAP APIs"
    },
    {
      "name": "ICAP",
      "description": "Operations related to configure ICAP API settings"
    },
    {
      "name": "TLS",
      "description": "Operations related to configure TLS settings"
    },
    {
      "name": "Status",
      "description": "Operations related to getting status of the product"
    }
  ],
  "externalDocs": {
    "description": "Documentation.",
    "url": "https://www.withsecure.com/userguides/product.html?business/atlant/latest/en"
  },
  "servers": [
    {
      "url": "https://localhost:13080/",
      "description": "Atlant Management API"
    }
  ],
  "paths": {
    "/api/atlant/clients/v1": {
      "get": {
        "summary": "Get list of clients",
        "description": "Return a list of clients and their scopes.",
        "operationId": "getClients",
        "tags": [
          "Clients"
        ],
        "responses": {
          "200": {
            "description": "Succesfull response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientsList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "summary": "Create a client",
        "description": "Create a new client. Caller needs to specify a list of scopes that the client is allowed to access. Response will contain a newly-generated client ID and client secret for the client.",
        "operationId": "createClient",
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scopes": {
                    "$ref": "#/components/schemas/ClientScopes"
                  }
                },
                "required": [
                  "scopes"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "client_id": {
                      "type": "string"
                    },
                    "client_secret": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete a client",
        "description": "Delete a client. Caller needs to specify the client ID of the client to be deleted.",
        "operationId": "deleteClient",
        "tags": [
          "Clients"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": {
                    "type": "string"
                  }
                },
                "required": [
                  "client_id"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/actions/v1/update": {
      "post": {
        "summary": "Update the product",
        "description": "Install all product, malware definition, and scanning engine updates.",
        "operationId": "updateProduct",
        "tags": [
          "Update"
        ],
        "parameters": [
          {
            "description": "Execute the request in synchronous mode.",
            "in": "query",
            "name": "wait",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfull response if the request was executed in synchronous mode.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created, if the request was executed in asynchronous mode.",
            "headers": {
              "Location": {
                "description": "The header for polling for the completion of the update later.",
                "schema": {
                  "type": "string"
                }
              },
              "Retry-After": {
                "description": "A suggestion on how many seconds the client should wait before polling",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "410": {
            "description": "Gone, can be returned if the update restarted the management server or other parts of Atlant."
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "description": "Service Temporarily Unavailable, can be returned if the update restarted the management server or other parts of Atlant."
          }
        }
      }
    },
    "/api/atlant/actions/v1/update/{update_uuid}": {
      "get": {
        "summary": "Get the update status",
        "description": "Get the status of the update request, if it was triggered asynchronously.",
        "operationId": "getUpdateStatus",
        "tags": [
          "Update"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "Location header value from POST request to /api/atlant/actions/v1/update",
            "name": "update_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfull response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "202": {
            "description": "The request is still being processed on the server, and the client should continue polling.",
            "headers": {
              "Retry-After": {
                "description": "A suggestion on how many seconds the client should wait before polling",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "410": {
            "description": "Gone"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "description": "Service Temporarily Unavailable"
          }
        }
      }
    },
    "/api/atlant/config/v1/updates": {
      "get": {
        "summary": "Retrieve product updates settings",
        "tags": [
          "Update"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update product updates settings",
        "description": "Set the product updates settings. If any of the fields are missing, they will be reset to default values in the configuration.",
        "tags": [
          "Update"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update product updates settings",
        "description": "Partially update the product updates settings. The request body can contain only the details to be updated. If any of the fields are missing, they will not be changed in the configuration.",
        "tags": [
          "Update"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete product updates settings",
        "description": "Reset the product updates settings to default values.",
        "tags": [
          "Update"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/updates/enabled": {
      "get": {
        "summary": "Retrieve the updates enabled setting",
        "tags": [
          "Update"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the updates enabled setting",
        "tags": [
          "Update"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the updates enabled setting",
        "tags": [
          "Update"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/updates/product_version": {
      "get": {
        "summary": "Retrieve the updates product_version setting",
        "tags": [
          "Update"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "default": ""
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the updates product_version setting",
        "tags": [
          "Update"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "atlant-2025_x"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "default": ""
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the updates product_version setting",
        "tags": [
          "Update"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/updates/schedule": {
      "get": {
        "summary": "Retrieve product updates schedule settings",
        "tags": [
          "Update"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatesScheduleSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update product updates schedule settings",
        "description": "Set the product updates schedule settings. If any of the fields are missing, they will be reset to default values in the configuration.",
        "tags": [
          "Update"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatesScheduleSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatesScheduleSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update product updates schedule settings",
        "description": "Partially update the product updates schedule settings. The request body can contain only the details to be updated. If any of the fields are missing, they will not be changed in the configuration.",
        "tags": [
          "Update"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatesScheduleSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatesScheduleSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete product updates schedule settings",
        "description": "Reset the product updates schedule settings to default values.",
        "tags": [
          "Update"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/updates/schedule/at_date_schedule": {
      "get": {
        "summary": "Retrieve the updates timestamp for at_date regime",
        "tags": [
          "Update"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 1640995200,
                  "default": 0
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the updates timestamp for at_date regime",
        "tags": [
          "Update"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "example": 1640995200,
                "default": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the updates timestamp for at_date regime",
        "tags": [
          "Update"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/updates/schedule/regime": {
      "get": {
        "summary": "Retrieve the updates regime setting",
        "tags": [
          "Update"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRegimeSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the updates regime setting",
        "tags": [
          "Update"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRegimeSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRegimeSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the updates regime setting",
        "tags": [
          "Update"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/updates/schedule/repetition_schedule": {
      "get": {
        "summary": "Retrieve product updates schedule for with_repetition regime",
        "tags": [
          "Update"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRepetitionSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update product updates schedule for with_repetition regime",
        "description": "Set the product updates schedule for with_repetition regime. If any of the fields are missing, they will be reset to default values in the configuration.",
        "tags": [
          "Update"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRepetitionSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRepetitionSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update product updates schedule for with_repetition regime",
        "description": "Partially update the product updates schedule for with_repetition regime. The request body can contain only the details to be updated. If any of the fields are missing, they will not be changed in the configuration.",
        "tags": [
          "Update"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRepetitionSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRepetitionSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete product updates schedule for with_repetition regime",
        "description": "Reset the product updates schedule for with_repetition regime to default values.",
        "tags": [
          "Update"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/updates/schedule/repetition_schedule/day": {
      "get": {
        "summary": "Retrieve the updates day setting",
        "tags": [
          "Update"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Days"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the updates day setting",
        "tags": [
          "Update"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Days"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Days"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the updates day setting",
        "tags": [
          "Update"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/updates/schedule/repetition_schedule/time_of_day": {
      "get": {
        "summary": "Retrieve the updates time of the day setting",
        "tags": [
          "Update"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "default": "00:00"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the updates time of the day setting",
        "tags": [
          "Update"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "11:24"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "default": "00:00"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the updates time of the day setting",
        "tags": [
          "Update"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/updates/use_tls": {
      "get": {
        "summary": "Retrieve the updates use_tls setting",
        "tags": [
          "Update"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the updates use_tls setting",
        "tags": [
          "Update"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the updates use_tls setting",
        "tags": [
          "Update"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/license": {
      "get": {
        "summary": "Get the license information",
        "description": "Get the license information.",
        "operationId": "getLicense",
        "tags": [
          "License"
        ],
        "responses": {
          "200": {
            "description": "Succesfull response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/License"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Put the license information",
        "description": "Put the license information. 'content' and 'type' fields are required. 'remote_license_key' field can be configured only via Elements Portal.",
        "operationId": "putLicense",
        "tags": [
          "License"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/License"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfull response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/License"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Patch the license information",
        "description": "Patch the license information.",
        "operationId": "patchLicense",
        "tags": [
          "License"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/License"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfull response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/License"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/authorization": {
      "get": {
        "summary": "Retrieve authorization server settings",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update authorization server settings",
        "description": "Set the authorization server settings. If any of the fields are missing, they will be reset to default values in the configuration.",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update authorization server settings",
        "description": "Partially update the authorization server settings. The request body can contain only the details to be updated. If any of the fields are missing, they will not be changed in the configuration.",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete authorization server settings",
        "description": "Delete the authorization server settings. WARNING! Deletion of https_endpoints as a part of the request will disable the authorization server, any further API requests will fail because the token will not be validated.  Functionality can be restored from command line by using atlantctl tool (e.g. atlantctl add authorization https_endpoints '{\"address\": \"127.0.0.1\",\"port\": 8080}').",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/authorization/external_domains": {
      "get": {
        "summary": "Retrieve external authorization domains",
        "description": "Returns the list of configured external authorization domains.",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalDomain"
                  }
                },
                "example": [
                  {
                    "audience": "example-audience",
                    "issuer": "example-issuer",
                    "signing_method": "HS256",
                    "verification_key": "cGFzc3dvcmQK"
                  }
                ]
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Replace external authorization domains",
        "description": "Set the list of external authorization domains.",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalDomain"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalDomain"
                  }
                },
                "example": [
                  {
                    "audience": "example-audience",
                    "issuer": "example-issuer",
                    "signing_method": "HS256",
                    "verification_key": "cGFzc3dvcmQK"
                  }
                ]
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "summary": "Add a new external authorization domain",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalDomain"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Resource created",
            "headers": {
              "Location": {
                "description": "URL of the added external domain",
                "schema": {
                  "type": "string",
                  "example": "/api/atlant/config/v1/authorization/external_domains/%22ext_domain_audience%22"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalDomain"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete all external authorization domains",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/authorization/external_domains/{DOMAIN}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/DomainId"
        }
      ],
      "get": {
        "summary": "Retrieve external authorization domain details",
        "description": "Returns external authorization domain details by its audience.",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalDomain"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Create or update external authorization domain",
        "description": "Create or update external authorization domain by its audience. The request body must contain all the external domain details.",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalDomain"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalDomain"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update external authorization domain",
        "description": "Partially update external authorization domain by its audience. The request body can contain only the details to be updated.",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalDomain"
              },
              "example": {
                "issuer": "example-issuer",
                "signing_method": "HS256"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalDomain"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete external authorization domain",
        "description": "Delete external authorization domain by its audience.",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/authorization/external_domains/{DOMAIN}/verification_key": {
      "parameters": [
        {
          "$ref": "#/components/parameters/DomainId"
        }
      ],
      "get": {
        "summary": "Get domain verification key",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationKey"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update domain verification key",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/authorization/external_domains/{DOMAIN}/signing_method": {
      "parameters": [
        {
          "$ref": "#/components/parameters/DomainId"
        }
      ],
      "get": {
        "summary": "Get domain signing method",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigningMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update domain signing method",
        "tags": [
          "Authorization"
        ],
        "description": "Update domain signing method. The request body must contain the signing method. WARNING! Changing the signing method without verification_key can result to misconfiguration and product's malfunction.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigningMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigningMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/authorization/external_domains/{DOMAIN}/issuer": {
      "parameters": [
        {
          "$ref": "#/components/parameters/DomainId"
        }
      ],
      "get": {
        "summary": "Get domain issuer",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "example-issuer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update domain issuer",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "example-issuer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "example-issuer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/authorization/external_domains/{DOMAIN}/audience": {
      "parameters": [
        {
          "$ref": "#/components/parameters/DomainId"
        }
      ],
      "get": {
        "summary": "Get domain audience",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "example-audience"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update domain audience",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "example-audience"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": "example-audience"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/authorization/https_endpoints": {
      "get": {
        "summary": "Get list of https endpoints",
        "description": "Returns the list of configured Authorization https endpoints.",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointSettings"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update list of https endpoints",
        "description": "Set the list of Authorization https endpoints.",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointSettings"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "summary": "Add a new https endpoint",
        "description": "Add a new Authorization https endpoint.",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointSettings"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Endpoint created",
            "headers": {
              "Location": {
                "description": "Relative URL of the added endpoint",
                "schema": {
                  "type": "string",
                  "example": "/api/atlant/config/v1/authorization/https_endpoints/%7B%22address%22%3A%22127.0.0.1%22%2C%22port%22%3A12083%7D"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete all https endpoints",
        "description": "Delete all Authorization https endpoints. WARNING! This operation results, that any further API requests will be failed, because the token can not be verified. Functionality can be restored from command line by using atlantctl tool (e.g. atlantctl add authorization https_endpoints '{\"address\": \"127.0.0.1\",\"port\": 8080}').",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/authorization/https_endpoints/{ENDPOINT}": {
      "parameters": [
        {
          "name": "ENDPOINT",
          "in": "path",
          "required": true,
          "description": "The endpoint object (URL-encoded).",
          "schema": {
            "$ref": "#/components/schemas/EndpointSettings"
          }
        }
      ],
      "get": {
        "summary": "Get a specific https endpoint",
        "description": "Returns the details of a specific Authorization https endpoint.",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update a specific https endpoint",
        "description": "Update the details of a specific Authorization https endpoint.",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update a specific https endpoint",
        "description": "Partially update the details of a specific Authorization https endpoint.",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific https endpoint",
        "description": "Delete a specific Authorization https endpoint.",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/authorization/https_endpoints/{ENDPOINT}/port": {
      "parameters": [
        {
          "name": "ENDPOINT",
          "in": "path",
          "required": true,
          "description": "The endpoint object (URL-encoded).",
          "schema": {
            "$ref": "#/components/schemas/EndpointSettings"
          }
        }
      ],
      "get": {
        "summary": "Get the port of a specific https endpoint",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 8080
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the port of a specific https endpoint",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "example": 8080
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 8080
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/authorization/https_endpoints/{ENDPOINT}/address": {
      "parameters": [
        {
          "name": "ENDPOINT",
          "in": "path",
          "required": true,
          "description": "The endpoint object (URL-encoded).",
          "schema": {
            "$ref": "#/components/schemas/EndpointSettings"
          }
        }
      ],
      "get": {
        "summary": "Get the address of a specific https endpoint",
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "ipv4",
                  "example": "127.0.0.1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the address of a specific https endpoint",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "ipv4",
                "example": "127.0.0.1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "ipv4",
                  "example": "127.0.0.1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/fsanalyze": {
      "get": {
        "summary": "Retrieve settings for fsanalyze",
        "description": "Retrieve default settings for fsanalyze command line tool.",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FsanalyzeSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update settings for fsanalyze",
        "description": "Update default settings for fsanalyze command line tool. If any of the fields are missing, the default value will be applied",
        "tags": [
          "fsanalyze"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FsanalyzeSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FsanalyzeSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update settings for fsanalyze",
        "description": "Partially update default settings for fsanalyze command line tool. If any of the fields are missing, the values will not be affected",
        "tags": [
          "fsanalyze"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FsanalyzeSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FsanalyzeSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete settings for fsanalyze",
        "description": "Delete settings configuration for fsanalyze command line tool. The default values will be applied",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/fsanalyze/actions": {
      "get": {
        "summary": "Retrieve actions for malicious files",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Actions"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update actions for malicious files",
        "tags": [
          "fsanalyze"
        ],
        "description": "Update actions for malicious files. The request body must contain the actions for malware, pua, spam and suspected files. If any of the fields are missing, the default value will be applied",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Actions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Actions"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update actions for malicious files",
        "tags": [
          "fsanalyze"
        ],
        "description": "Partially update actions for malicious files. If any of the fields are missing, the value will not be affected.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Actions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful partial update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Actions"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete actions for malicious files",
        "tags": [
          "fsanalyze"
        ],
        "description": "Delete configured actions for malicious files. The default values will be applied",
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/fsanalyze/actions/{THREAT}": {
      "parameters": [
        {
          "name": "THREAT",
          "in": "path",
          "required": true,
          "description": "The threat type",
          "schema": {
            "type": "string",
            "enum": [
              "malware",
              "pua",
              "spam",
              "suspected"
            ]
          }
        }
      ],
      "get": {
        "summary": "Retrieve actions for a specific threat",
        "description": "Retrieve configured action for a specific threat type, which will be applied to the files during fsanalyze",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionEnum"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update actions for a specific threat",
        "tags": [
          "fsanalyze"
        ],
        "description": "Configure an action, which will be applied by fsanalyze for a specific threat type.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionEnum"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionEnum"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete actions for a specific threat",
        "tags": [
          "fsanalyze"
        ],
        "description": "Delete configured action for a specific threat type. The default value will be applied",
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/fsanalyze/scan_archives": {
      "get": {
        "summary": "Retrieve the scan archives setting",
        "description": "Extract and scan files from archives",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the scan archives setting",
        "tags": [
          "fsanalyze"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the scan archives setting",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/fsanalyze/archive_max_nested": {
      "get": {
        "summary": "Retrieve the maximum depth for scanning nested archives",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 5
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the maximum depth for scanning nested archives",
        "tags": [
          "fsanalyze"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 5
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 5
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the configuration for maximum depth of scanning nested archives",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/fsanalyze/block_archive_max_nested": {
      "get": {
        "summary": "Retrieve the archive_max_nested blocking setting",
        "description": "Block archives that are not fully scanned because of the configured archive_max_nested value",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the archive_max_nested blocking setting",
        "tags": [
          "fsanalyze"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the archive_max_nested blocking setting",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/fsanalyze/block_encrypted_archives": {
      "get": {
        "summary": "Retrieve the current encrypted archives blocking setting",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the encrypted archives blocking setting",
        "tags": [
          "fsanalyze"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the encrypted archives blocking setting",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/fsanalyze/detect_spam": {
      "get": {
        "summary": "Retrieve the spam detection setting",
        "description": "Detect spam and phishing content",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the spam detection setting",
        "tags": [
          "fsanalyze"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the spam detection setting",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/fsanalyze/detect_pua": {
      "get": {
        "summary": "Retrieve the potentially unwanted applications detection setting",
        "description": "Detect spam and phishing content",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the potentially unwanted applications detection setting",
        "tags": [
          "fsanalyze"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the potentially unwanted applications detection setting",
        "tags": [
          "fsanalyze"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/http_proxy": {
      "get": {
        "summary": "Retrieve HTTP proxy settings",
        "tags": [
          "Http proxy"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpProxySettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update HTTP proxy settings",
        "description": "Update HTTP proxy settings. If any of the fields are missing, the default value will be applied",
        "tags": [
          "Http proxy"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HttpProxySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpProxySettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update HTTP proxy settings",
        "description": "Partially update HTTP proxy settings. If any of the fields are missing, the value will not be affected.",
        "tags": [
          "Http proxy"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HttpProxySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful partial update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpProxySettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete HTTP proxy settings",
        "description": "Delete configured HTTP proxy settings. The default values will be applied",
        "tags": [
          "Http proxy"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/http_proxy/enabled": {
      "get": {
        "summary": "Retrieve the HTTP proxy enabled setting",
        "tags": [
          "Http proxy"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the HTTP proxy enabled setting",
        "tags": [
          "Http proxy"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the HTTP proxy enabled setting",
        "tags": [
          "Http proxy"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/http_proxy/host": {
      "get": {
        "summary": "Retrieve the HTTP proxy host setting",
        "tags": [
          "Http proxy"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the HTTP proxy host setting",
        "tags": [
          "Http proxy"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "proxy.example.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the HTTP proxy host setting",
        "tags": [
          "Http proxy"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/http_proxy/port": {
      "get": {
        "summary": "Retrieve the HTTP proxy port setting",
        "tags": [
          "Http proxy"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the HTTP proxy port setting",
        "tags": [
          "Http proxy"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "example": 8080
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the HTTP proxy port setting",
        "tags": [
          "Http proxy"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/http_proxy/username": {
      "get": {
        "summary": "Retrieve the HTTP proxy username setting",
        "tags": [
          "Http proxy"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the HTTP proxy username setting",
        "tags": [
          "Http proxy"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "proxy_user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the HTTP proxy username setting",
        "tags": [
          "Http proxy"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/http_proxy/password": {
      "get": {
        "summary": "Retrieve the HTTP proxy password setting",
        "tags": [
          "Http proxy"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the HTTP proxy password setting",
        "tags": [
          "Http proxy"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "proxy_pass"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the HTTP proxy password setting",
        "tags": [
          "Http proxy"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/management": {
      "get": {
        "summary": "Retrieve management server settings",
        "tags": [
          "Management"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update Management server settings",
        "description": "Set the Management server settings. WARNING! Missed https_endpoints value results to using of the default value (i.e. empty list []). It means that all management https_endpoints will be reset to default values in the configuration and any further requests will fail, because the server will be shut down.  Functionality can be restored from command line by using atlantctl tool (e.g. atlantctl add management https_endpoints '{\"address\": \"127.0.0.1\",\"port\": 8080}').",
        "tags": [
          "Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update Management server settings",
        "description": "Partially update the Management server settings. If https_endpoints is missed, then its value will not be changed in the configuration.",
        "tags": [
          "Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete Management server settings",
        "description": "Delete the Management server settings. WARNING! Deletion of https_endpoints as a part of the request will disable the Management server, any further API requests will fail because the server will be shut down. Functionality can be restored from command line by using atlantctl tool (e.g. atlantctl add management https_endpoints '{\"address\": \"127.0.0.1\",\"port\": 8080}').",
        "tags": [
          "Management"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/management/https_endpoints": {
      "get": {
        "summary": "Get list of https endpoints",
        "description": "Returns the list of configured Management https endpoints.",
        "tags": [
          "Management"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointSettings"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update list of https endpoints",
        "description": "Set the list of Management https endpoints. WARNING! Empty list results to all management https_endpoints will be reset to default values in the configuration and any further requests will fail, because the server will be shut down. Functionality can be restored from command line by using atlantctl tool (e.g. atlantctl add management https_endpoints '{\"address\": \"127.0.0.1\",\"port\": 8080}').",
        "tags": [
          "Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointSettings"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "summary": "Add a new https endpoint",
        "description": "Add a new Management https endpoint.",
        "tags": [
          "Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointSettings"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Endpoint created",
            "headers": {
              "Location": {
                "description": "Relative URL of the added endpoint",
                "schema": {
                  "type": "string",
                  "example": "/api/atlant/config/v1/management/https_endpoints/%7B%22address%22%3A%22127.0.0.1%22%2C%22port%22%3A12083%7D"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete all https endpoints",
        "description": "Delete all Management https endpoints. WARNING! This operation results, that any further API requests will be failed, because the server will be shut down. Functionality can be restored from command line by using atlantctl tool (e.g. atlantctl add management https_endpoints '{\"address\": \"127.0.0.1\",\"port\": 8080}').",
        "tags": [
          "Management"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/management/https_endpoints/{ENDPOINT}": {
      "parameters": [
        {
          "name": "ENDPOINT",
          "in": "path",
          "required": true,
          "description": "The endpoint object (URL-encoded).",
          "schema": {
            "$ref": "#/components/schemas/EndpointSettings"
          }
        }
      ],
      "get": {
        "summary": "Get a specific https endpoint",
        "description": "Returns the details of a specific Management https endpoint.",
        "tags": [
          "Management"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update a specific https endpoint",
        "description": "Update the details of a specific Management https endpoint.",
        "tags": [
          "Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update a specific https endpoint",
        "description": "Partially update the details of a specific Management https endpoint.",
        "tags": [
          "Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific https endpoint",
        "description": "Delete a specific Management https endpoint.",
        "tags": [
          "Management"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/management/https_endpoints/{ENDPOINT}/port": {
      "parameters": [
        {
          "name": "ENDPOINT",
          "in": "path",
          "required": true,
          "description": "The endpoint object (URL-encoded).",
          "schema": {
            "$ref": "#/components/schemas/EndpointSettings"
          }
        }
      ],
      "get": {
        "summary": "Get the port of a specific https endpoint",
        "tags": [
          "Management"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 8080
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the port of a specific https endpoint",
        "tags": [
          "Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "example": 8080
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 8080
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/management/https_endpoints/{ENDPOINT}/address": {
      "parameters": [
        {
          "name": "ENDPOINT",
          "in": "path",
          "required": true,
          "description": "The endpoint object (URL-encoded).",
          "schema": {
            "$ref": "#/components/schemas/EndpointSettings"
          }
        }
      ],
      "get": {
        "summary": "Get the address of a specific https endpoint",
        "tags": [
          "Management"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "ipv4",
                  "example": "127.0.0.1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the address of a specific https endpoint",
        "tags": [
          "Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "ipv4",
                "example": "127.0.0.1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "ipv4",
                  "example": "127.0.0.1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/online_services": {
      "get": {
        "summary": "Retrieve the Online services setting",
        "tags": [
          "Online services"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the Online services setting",
        "tags": [
          "Online services"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the Online services setting",
        "tags": [
          "Online services"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/online_services/enabled": {
      "get": {
        "summary": "Retrieve the Online services enabled setting",
        "tags": [
          "Online services"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the Online services enabled setting",
        "tags": [
          "Online services"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the Online services enabled setting",
        "tags": [
          "Online services"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning": {
      "get": {
        "summary": "Retrieve all scanning settings",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanningSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update all scanning settings",
        "description": "Update the all scanning settings. Any missed setting will be reset to default in the configuration.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanningSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanningSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update all scanning settings",
        "description": "Partially update the all scanning settings. Only specified settings will be updated.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanningSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful partial update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanningSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete all scanning settings",
        "description": "Reset all scanning settings to default.",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/archive_max_nested": {
      "get": {
        "summary": "Retrieve the maximum depth for scanning nested archives",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 5
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the maximum depth for scanning nested archives",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 5
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 5
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the configuration for maximum depth of scanning nested archives",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/forbidden_uri_categories": {
      "get": {
        "summary": "Retrieve forbidden URI categories",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenUriCategories"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update forbidden URI categories. Any missed category will be reset to default in the configuration.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForbiddenUriCategories"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenUriCategories"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update forbidden URI categories. Only specified categories will be updated.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForbiddenUriCategories"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful partial update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenUriCategories"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete forbidden URI categories",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/forbidden_uri_categories/{CATEGORY}": {
      "parameters": [
        {
          "name": "CATEGORY",
          "in": "path",
          "required": true,
          "description": "The category name.",
          "schema": {
            "type": "string",
            "enum": [
              "abortion",
              "adserving",
              "adult",
              "alcohol_and_tobacco",
              "anonymizers",
              "auctions",
              "banking",
              "blogs",
              "chat",
              "dating",
              "disturbing",
              "drugs",
              "entertainment",
              "file_sharing",
              "forum",
              "gambling",
              "games",
              "hate",
              "illegal",
              "job_search",
              "paymentservice",
              "search_engines",
              "shopping",
              "social_networking",
              "software_download",
              "spam",
              "streaming_media",
              "tracking_cookie",
              "tracking_domain",
              "tracking_object",
              "tracking_script",
              "travel",
              "violence",
              "warez",
              "weapons",
              "webmail"
            ]
          }
        }
      ],
      "get": {
        "summary": "Retrieve the value for the forbidden URI category",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the value for the forbidden URI category",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the value for the forbidden URI category",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/https_endpoints": {
      "get": {
        "summary": "Get list of https endpoints",
        "description": "Returns the list of configured Scanning https endpoints.",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointSettings"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update list of https endpoints",
        "description": "Set the list of Scanning https endpoints. WARNING! Empty list results to all scanning https_endpoints will be reset to default values in the configuration and any further scanning requests will fail.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointSettings"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "summary": "Add a new https endpoint",
        "description": "Add a new Scanning https endpoint.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointSettings"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Endpoint created",
            "headers": {
              "Location": {
                "description": "Relative URL of the added endpoint",
                "schema": {
                  "type": "string",
                  "example": "/api/atlant/config/v1/scanning/https_endpoints/%7B%22address%22%3A%22127.0.0.1%22%2C%22port%22%3A12083%7D"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete all https endpoints",
        "description": "Delete all Scanning https endpoints.",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/https_endpoints/{ENDPOINT}": {
      "parameters": [
        {
          "name": "ENDPOINT",
          "in": "path",
          "required": true,
          "description": "The endpoint object (URL-encoded).",
          "schema": {
            "$ref": "#/components/schemas/EndpointSettings"
          }
        }
      ],
      "get": {
        "summary": "Get a specific https endpoint",
        "description": "Returns the details of a specific Scanning https endpoint.",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update a specific https endpoint",
        "description": "Update the details of a specific Scanning https endpoint.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update a specific https endpoint",
        "description": "Partially update the details of a specific Scanning https endpoint.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific https endpoint",
        "description": "Delete a specific Scanning https endpoint.",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/https_endpoints/{ENDPOINT}/port": {
      "parameters": [
        {
          "name": "ENDPOINT",
          "in": "path",
          "required": true,
          "description": "The endpoint object (URL-encoded).",
          "schema": {
            "$ref": "#/components/schemas/EndpointSettings"
          }
        }
      ],
      "get": {
        "summary": "Get the port of a specific https endpoint",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 8080
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the port of a specific https endpoint",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "example": 8080
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 8080
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/https_endpoints/{ENDPOINT}/address": {
      "parameters": [
        {
          "name": "ENDPOINT",
          "in": "path",
          "required": true,
          "description": "The endpoint object (URL-encoded).",
          "schema": {
            "$ref": "#/components/schemas/EndpointSettings"
          }
        }
      ],
      "get": {
        "summary": "Get the address of a specific https endpoint",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "ipv4",
                  "example": "127.0.0.1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the address of a specific https endpoint",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "ipv4",
                "example": "127.0.0.1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "ipv4",
                  "example": "127.0.0.1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/keepalive_time": {
      "get": {
        "summary": "Retrieve the keepalive time for scanning",
        "description": "The keepalive time for scanning in seconds.",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 600
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the keepalive time for scanning",
        "description": "The keepalive time for scanning in seconds.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "minimum": 0,
                "example": 600
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 600
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the keepalive time for scanning",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/max_scan_time": {
      "get": {
        "summary": "Retrieve the maximum scan time",
        "description": "The maximum scan time in seconds.",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 90
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the maximum scan time",
        "description": "The maximum scan time in seconds.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "minimum": 0,
                "example": 90
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 90
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the maximum scan time",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/max_scan_size": {
      "get": {
        "summary": "Retrieve the maximum scan size",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 2147483648
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the maximum scan size",
        "description": "Update the maximum scan size. Any missed setting will be reset to default in the configuration.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaxLimitSettings"
              },
              "example": {
                "enabled": true,
                "limit": 2147483648
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 2147483648
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update the maximum scan size",
        "description": "Partially update the maximum scan size. Only specified settings will be updated.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaxLimitSettings"
              },
              "example": {
                "limit": 2147483648
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 2147483648
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the maximum scan size",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/max_scan_size/enabled": {
      "get": {
        "summary": "Retrieve the max scan size enabled setting",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the max scan size enabled setting",
        "description": "Enable or disable the max scan size setting.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Reset to default the max scan size enabled setting",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/max_scan_size/limit": {
      "get": {
        "summary": "Retrieve the maximum scan size limit",
        "description": "The maximum scan size limit in bytes.",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 2147483648
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the maximum scan size limit",
        "description": "The maximum scan size limit in bytes.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "minimum": 0,
                "example": 2147483648
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 2147483648
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the maximum scan size limit",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/reputation": {
      "get": {
        "summary": "Retrieve the reputation check settings",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReputationSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the reputation check settings",
        "description": "Update the reputation check settings. Any missed setting will be reset to default in the configuration.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReputationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReputationSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update the reputation check settings",
        "description": "Partially update the reputation check settings. Only specified settings will be updated.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReputationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReputationSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the reputation check settings",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/reputation/file_check": {
      "get": {
        "summary": "Retrieve the reputation file_check setting",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the reputation file_check setting",
        "description": "Enable or disable the reputation setting.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Reset to default the reputation file_check setting",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/reputation/timeout": {
      "get": {
        "summary": "Retrieve the reputation check requests timeout",
        "description": "The reputation check requests timeout in seconds.",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 5
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the reputation check requests timeout",
        "description": "The reputation check requests timeout in seconds.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "minimum": 0,
                "example": 5
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 5
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the reputation check requests timeout",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/reputation/url_check": {
      "get": {
        "summary": "Retrieve the reputation url_check setting",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the reputation url_check setting",
        "description": "Enable or disable the reputation setting.",
        "tags": [
          "Scanning"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Reset to default the reputation url_check setting",
        "tags": [
          "Scanning"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging": {
      "get": {
        "summary": "Retrieve logging settings",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggingSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update logging settings",
        "description": "Update the logging settings. Any missed setting will be reset to default in the configuration.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoggingSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggingSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update logging settings",
        "description": "Partially update the logging settings. Only specified settings will be updated.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoggingSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful partial update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggingSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete logging settings",
        "description": "Reset the logging settings to default.",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/https": {
      "get": {
        "summary": "Retrieve the https request headers for logging",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpsLoggingSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the https request headers for logging",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HttpsLoggingSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpsLoggingSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Reset to default https request headers for logging",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/https/request_headers": {
      "get": {
        "summary": "Get list of https request headers for logging",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "User-Agent"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update list of https request headers for logging",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "User-Agent"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "User-Agent"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "summary": "Add a new https request header for logging",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "User-Agent"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Endpoint created",
            "headers": {
              "Location": {
                "description": "Relative URL of the added endpoint",
                "schema": {
                  "type": "string",
                  "example": "/api/atlant/config/v1/scanning/logging/https/request_headers/%22User-Agent%22"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User-Agent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete all https request headers for logging",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/icap": {
      "get": {
        "summary": "Retrieve the icap headers for logging",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IcapLoggingSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the icap headers for logging",
        "description": "Update the icap headers for logging. Any missed setting will be reset to default in the configuration.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IcapLoggingSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IcapLoggingSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update the icap headers for logging",
        "description": "Partially update the icap headers for logging. Only specified settings will be updated.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IcapLoggingSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IcapLoggingSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Reset to default icap headers for logging",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/icap/encapsulated_request_headers": {
      "get": {
        "summary": "Get list of icap encapsulated request headers for logging",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "User-Agent"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update list of icap encapsulated request headers for logging",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "User-Agent"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "User-Agent"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "summary": "Add a new icap encapsulated request header for logging",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "User-Agent"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Endpoint created",
            "headers": {
              "Location": {
                "description": "Relative URL of the added endpoint",
                "schema": {
                  "type": "string",
                  "example": "/api/atlant/config/v1/scanning/logging/icap/encapsulated_request_headers/%22User-Agent%22"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User-Agent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete all icap encapsulated request headers for logging",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/icap/encapsulated_response_headers": {
      "get": {
        "summary": "Get list of icap encapsulated response headers for logging",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "User-Agent"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update list of icap encapsulated response headers for logging",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "User-Agent"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "User-Agent"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "summary": "Add a new icap encapsulated response header for logging",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "User-Agent"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Endpoint created",
            "headers": {
              "Location": {
                "description": "Relative URL of the added endpoint",
                "schema": {
                  "type": "string",
                  "example": "/api/atlant/config/v1/scanning/logging/icap/encapsulated_response_headers/%22User-Agent%22"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User-Agent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete all icap encapsulated response headers for logging",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/icap/request_headers": {
      "get": {
        "summary": "Get list of icap request headers for logging",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "User-Agent"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update list of icap request headers for logging",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "User-Agent"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "User-Agent"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "summary": "Add a new icap request header for logging",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "User-Agent"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Endpoint created",
            "headers": {
              "Location": {
                "description": "Relative URL of the added endpoint",
                "schema": {
                  "type": "string",
                  "example": "/api/atlant/config/v1/scanning/logging/icap/request_headers/%22User-Agent%22"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "User-Agent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete all icap request headers for logging",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/ip_address": {
      "get": {
        "summary": "Retrieve the logging ip_address setting",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the logging ip_address setting",
        "description": "Enable or disable the ip_address logging.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Reset to default the logging ip_address setting",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/rotation": {
      "get": {
        "summary": "Retrieve logging rotation settings",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggingRotationSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update logging rotation settings",
        "description": "Update the logging rotation settings. Any missed setting will be reset to default in the configuration.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoggingRotationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggingRotationSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update logging rotation settings",
        "description": "Partially update the logging rotation settings. Only specified settings will be updated.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoggingRotationSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful partial update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggingRotationSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete logging rotation settings",
        "description": "Reset the logging rotation settings to default.",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/rotation/file_size": {
      "get": {
        "summary": "Retrieve the Log file rotation size",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 10000000
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the Log file rotation size",
        "description": "Update the Log file rotation size. Any missed setting will be reset to default in the configuration.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaxLimitSettings"
              },
              "example": {
                "enabled": true,
                "limit": 10000000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 10000000
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update the Log file rotation size",
        "description": "Partially update the Log file rotation size. Only specified settings will be updated.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaxLimitSettings"
              },
              "example": {
                "limit": 10000000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 10000000
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the Log file rotation size",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/rotation/file_size/enabled": {
      "get": {
        "summary": "Retrieve the Log file rotation size enabled setting",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the Log file rotation size enabled setting",
        "description": "Enable or disable the Log file rotation size setting.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Reset to default the Log file rotation size enabled setting",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/rotation/file_size/limit": {
      "get": {
        "summary": "Retrieve the Log file rotation size limit",
        "description": "The Log file rotation size limit in bytes.",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 10000000
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the Log file rotation size limit",
        "description": "The Log file rotation size limit in bytes.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "minimum": 0,
                "example": 10000000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 10000000
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the Log file rotation size limit",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/rotation/max_bytes": {
      "get": {
        "summary": "Retrieve the maximum cumulative size of rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 10000000
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the maximum cumulative size of rotated access log files",
        "description": "Update the maximum cumulative size of rotated access log files. Any missed setting will be reset to default in the configuration.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaxLimitSettings"
              },
              "example": {
                "enabled": true,
                "limit": 10000000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 10000000
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update the maximum cumulative size of rotated access log files",
        "description": "Partially update the maximum cumulative size of rotated access log files. Only specified settings will be updated.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaxLimitSettings"
              },
              "example": {
                "limit": 10000000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 10000000
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the maximum cumulative size of rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/rotation/max_bytes/enabled": {
      "get": {
        "summary": "Retrieve enabled setting for the maximum cumulative size of rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update enabled setting for the maximum cumulative size of rotated access log files",
        "description": "Enable or disable the maximum cumulative size of rotated access log files setting.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Reset to default enabled setting for the maximum cumulative size of rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/rotation/max_bytes/limit": {
      "get": {
        "summary": "Retrieve limit for the maximum cumulative size of rotated access log files",
        "description": "The maximum cumulative size of rotated access log files in bytes.",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 10000000
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update limit for the maximum cumulative size of rotated access log files",
        "description": "The maximum cumulative size of rotated access log files in bytes.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "minimum": 0,
                "example": 10000000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 10000000
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default limit for the maximum cumulative size of rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/rotation/max_days": {
      "get": {
        "summary": "Retrieve the maximum number of days that rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 30
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the maximum number of days that rotated access log files",
        "description": "Update the maximum number of days that rotated access log files. Any missed setting will be reset to default in the configuration.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaxLimitSettings"
              },
              "example": {
                "enabled": true,
                "limit": 30
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 30
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update the maximum number of days that rotated access log files",
        "description": "Partially update the maximum number of days that rotated access log files. Only specified settings will be updated.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaxLimitSettings"
              },
              "example": {
                "limit": 30
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 30
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the maximum number of days that rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/rotation/max_days/enabled": {
      "get": {
        "summary": "Retrieve enabled setting for the maximum number of days that rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update enabled setting for the maximum number of days that rotated access log files",
        "description": "Enable or disable the maximum number of days that rotated access log files setting.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Reset to default enabled setting for the maximum number of days that rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/rotation/max_days/limit": {
      "get": {
        "summary": "Retrieve limit for the maximum number of days that rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 30
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update limit for the maximum number of days that rotated access log files",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "minimum": 0,
                "example": 30
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 30
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default limit for the maximum number of days that rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/rotation/max_files": {
      "get": {
        "summary": "Retrieve the maximum number of rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 10
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the maximum number of rotated access log files",
        "description": "Update the maximum number of rotated access log files. Any missed setting will be reset to default in the configuration.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaxLimitSettings"
              },
              "example": {
                "enabled": true,
                "limit": 10
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 10
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update the maximum number of rotated access log files",
        "description": "Partially update the maximum number of rotated access log files. Only specified settings will be updated.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaxLimitSettings"
              },
              "example": {
                "limit": 10
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxLimitSettings"
                },
                "example": {
                  "enabled": true,
                  "limit": 10
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the maximum number of rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/rotation/max_files/enabled": {
      "get": {
        "summary": "Retrieve enabled setting for the maximum number of rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update enabled setting for the maximum number of rotated access log files",
        "description": "Enable or disable the maximum number of rotated access log files setting.",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Reset to default enabled setting for the maximum number of rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/logging/rotation/max_files/limit": {
      "get": {
        "summary": "Retrieve limit for the maximum number of rotated access log files",
        "description": "The maximum number of rotated access log files.",
        "tags": [
          "Logging"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 10
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update limit for the maximum number of rotated access log files",
        "tags": [
          "Logging"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "minimum": 0,
                "example": 10
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 10
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default limit for the maximum number of rotated access log files",
        "tags": [
          "Logging"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap": {
      "get": {
        "summary": "Retrieve ICAP scanning settings",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IcapSettings"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update ICAP scanning settings",
        "description": "Update the ICAP scanning settings. Any missed setting will be reset to default in the configuration.",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IcapSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IcapSettings"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partially update ICAP scanning settings",
        "description": "Partially update the ICAP scanning settings. Only specified settings will be updated.",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IcapSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IcapSettings"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete ICAP scanning settings",
        "description": "Reset the ICAP scanning settings to default.",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap/scan_archives": {
      "get": {
        "summary": "Retrieve the scan archives setting",
        "description": "Extract and scan files from archives",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the scan archives setting",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the scan archives setting",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap/block_archive_max_nested": {
      "get": {
        "summary": "Retrieve the archive_max_nested blocking setting",
        "description": "Block archives that are not fully scanned because of the configured archive_max_nested value",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the archive_max_nested blocking setting",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the archive_max_nested blocking setting",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap/block_encrypted_archives": {
      "get": {
        "summary": "Retrieve the current encrypted archives blocking setting",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the encrypted archives blocking setting",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the encrypted archives blocking setting",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap/detect_pua": {
      "get": {
        "summary": "Retrieve the potentially unwanted applications detection setting",
        "description": "Detect spam and phishing content",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the potentially unwanted applications detection setting",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the potentially unwanted applications detection setting",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap/trickle": {
      "get": {
        "summary": "Retrieve the ICAP trickle settings",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IcapTrickleSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the ICAP trickle settings",
        "description": "Update the ICAP trickle settings. Any missed setting will be reset to default in the configuration.",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IcapTrickleSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IcapTrickleSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update the ICAP trickle settings",
        "description": "Partially update the ICAP trickle settings. Only specified settings will be updated.",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IcapTrickleSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IcapTrickleSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete the ICAP trickle settings",
        "description": "Reset the ICAP trickle settings to default.",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap/trickle/enabled": {
      "get": {
        "summary": "Retrieve the ICAP trickle enabled setting",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the ICAP trickle enabled setting",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the ICAP trickle enabled setting",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap/trickle/interval": {
      "get": {
        "summary": "Retrieve the ICAP trickle interval setting",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 30
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the ICAP trickle interval setting",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 30
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 30
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the ICAP trickle interval setting",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap/trickle/max_bytes": {
      "get": {
        "summary": "Retrieve the ICAP trickle max_bytes setting",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 120
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the ICAP trickle max_bytes setting",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "minimum": 1,
                "example": 120
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 120
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the ICAP trickle max_bytes setting",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap/trickle/start_delay": {
      "get": {
        "summary": "Retrieve the ICAP trickle start_delay setting",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 0
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the ICAP trickle start_delay setting",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "minimum": 0,
                "example": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 0
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Restore to default the ICAP trickle start_delay setting",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap_endpoints": {
      "get": {
        "summary": "Get list of icap endpoints",
        "description": "Returns the list of configured Scanning icap endpoints.",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointSettings"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update list of icap endpoints",
        "description": "Set the list of Scanning icap endpoints.",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointSettings"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "post": {
        "summary": "Add a new icap endpoint",
        "description": "Add a new Scanning icap endpoint.",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointSettings"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Endpoint created",
            "headers": {
              "Location": {
                "description": "Relative URL of the added endpoint",
                "schema": {
                  "type": "string",
                  "example": "/api/atlant/config/v1/scanning/icap_endpoints/%7B%22address%22%3A%22127.0.0.1%22%2C%22port%22%3A12083%7D"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete all icap endpoints",
        "description": "Delete all Scanning icap endpoints.",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap_endpoints/{ENDPOINT}": {
      "parameters": [
        {
          "name": "ENDPOINT",
          "in": "path",
          "required": true,
          "description": "The endpoint object (URL-encoded).",
          "schema": {
            "$ref": "#/components/schemas/EndpointSettings"
          }
        }
      ],
      "get": {
        "summary": "Get a specific icap endpoint",
        "description": "Returns the details of a specific Scanning icap endpoint.",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update a specific icap endpoint",
        "description": "Update the details of a specific Scanning icap endpoint.",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update a specific icap endpoint",
        "description": "Partially update the details of a specific Scanning icap endpoint.",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific icap endpoint",
        "description": "Delete a specific Scanning icap endpoint.",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap_endpoints/{ENDPOINT}/port": {
      "parameters": [
        {
          "name": "ENDPOINT",
          "in": "path",
          "required": true,
          "description": "The endpoint object (URL-encoded).",
          "schema": {
            "$ref": "#/components/schemas/EndpointSettings"
          }
        }
      ],
      "get": {
        "summary": "Get the port of a specific icap endpoint",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 8080
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the port of a specific icap endpoint",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "example": 8080
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 8080
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/scanning/icap_endpoints/{ENDPOINT}/address": {
      "parameters": [
        {
          "name": "ENDPOINT",
          "in": "path",
          "required": true,
          "description": "The endpoint object (URL-encoded).",
          "schema": {
            "$ref": "#/components/schemas/EndpointSettings"
          }
        }
      ],
      "get": {
        "summary": "Get the address of a specific icap endpoint",
        "tags": [
          "ICAP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "ipv4",
                  "example": "127.0.0.1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update the address of a specific icap endpoint",
        "tags": [
          "ICAP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "ipv4",
                "example": "127.0.0.1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "ipv4",
                  "example": "127.0.0.1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/tls": {
      "get": {
        "summary": "Retrieve TLS data",
        "tags": [
          "TLS"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TlsSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update TLS data",
        "tags": [
          "TLS"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TlsSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TlsSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "patch": {
        "summary": "Partially update TLS data",
        "tags": [
          "TLS"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TlsSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "certificate": "a2V5Cg==",
                  "key": "Y2VydGlmaWNhdGU="
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete TLS data",
        "tags": [
          "TLS"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/tls/certificate": {
      "get": {
        "summary": "Retrieve TLS certificate data",
        "tags": [
          "TLS"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Y2VydGlmaWNhdGUgY29udGVudA==",
                  "format": "base64"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update TLS certificate data",
        "tags": [
          "TLS"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "Y2VydGlmaWNhdGUgY29udGVudA==",
                "format": "base64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Y2VydGlmaWNhdGUgY29udGVudA==",
                  "format": "base64"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete TLS certificate data",
        "tags": [
          "TLS"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/config/v1/tls/key": {
      "get": {
        "summary": "Retrieve TLS key data",
        "tags": [
          "TLS"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "a2V5",
                  "format": "base64"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "put": {
        "summary": "Update TLS key data",
        "tags": [
          "TLS"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "a2V5",
                "format": "base64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "a2V5",
                  "format": "base64"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      },
      "delete": {
        "summary": "Delete TLS key data",
        "tags": [
          "TLS"
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/latest_definition_update": {
      "get": {
        "summary": "Retrieve the latest definition update status",
        "description": "Fetches the time of the latest definition update.",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2000-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/latest_definition_update/time": {
      "get": {
        "summary": "Retrieve the latest definition update time",
        "description": "Fetches the time of the latest definition update.",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2000-01-01T00:00:00Z"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/product_version": {
      "get": {
        "summary": "Retrieve pinned product version",
        "description": "Fetch the current pinned product version.",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "default": ""
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "unset",
                        "applied",
                        "in-progress",
                        "error"
                      ],
                      "description": "Status of the pinned product version.",
                      "default": "unset"
                    }
                  }
                },
                "example": {
                  "name": "atlant-2025_X",
                  "status": "applied"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/product_version/name": {
      "get": {
        "summary": "Retrieve pinned product version name",
        "description": "Fetch the current pinned product version name.",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "default": "",
                  "example": "atlant-2025_X"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/product_version/status": {
      "get": {
        "summary": "Retrieve pinned product version status",
        "description": "Fetch current status of the pinned product version.",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "unset",
                    "applied",
                    "in-progress",
                    "error"
                  ],
                  "description": "Status of the pinned product version.",
                  "default": "unset"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service": {
      "get": {
        "summary": "Retrieve scanning platform statistics",
        "description": "Fetch statistics related to the scanning platform.",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avg_transaction_latency": {
                      "$ref": "#/components/schemas/Stats",
                      "description": "Average transaction latency in milliseconds"
                    },
                    "connection_count": {
                      "type": "integer",
                      "description": "Number of connected hosts"
                    },
                    "detection_count": {
                      "$ref": "#/components/schemas/StatsTotal",
                      "description": "Number of detections in different period"
                    },
                    "last_detection": {
                      "type": "string",
                      "example": "Suspicious:W32/Malware.99b8796949"
                    },
                    "max_connection_count": {
                      "$ref": "#/components/schemas/Stats",
                      "description": "Maximum number of connected hosts in different periods"
                    },
                    "max_transaction_latency": {
                      "$ref": "#/components/schemas/Stats",
                      "description": "Maximum transaction latency (milliseconds) in different periods"
                    },
                    "min_transaction_latency": {
                      "$ref": "#/components/schemas/Stats",
                      "description": "Minimum transaction latency (milliseconds) in different periods"
                    },
                    "transaction_count": {
                      "$ref": "#/components/schemas/StatsTotal",
                      "description": "Number of transactions in different periods"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/avg_transaction_latency": {
      "get": {
        "summary": "Retrieve average transaction latency",
        "description": "Average transaction latency in milliseconds",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stats"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/avg_transaction_latency/daily": {
      "get": {
        "summary": "Retrieve average transaction latency in the last 24 hours",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/avg_transaction_latency/monthly": {
      "get": {
        "summary": "Retrieve average transaction latency in the last month",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/avg_transaction_latency/weekly": {
      "get": {
        "summary": "Retrieve average transaction latency in the last week",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/connection_count": {
      "get": {
        "summary": "Retrieve number of connected hosts",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/detection_count": {
      "get": {
        "summary": "Retrieve number of detections in different periods",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatsTotal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/detection_count/daily": {
      "get": {
        "summary": "Retrieve number of detections in the last 24 hours",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/detection_count/monthly": {
      "get": {
        "summary": "Retrieve number of detections in the last month",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/detection_count/total": {
      "get": {
        "summary": "Retrieve current number of detections",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/detection_count/weekly": {
      "get": {
        "summary": "Retrieve number of detections in the last week",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/last_detection": {
      "get": {
        "summary": "Retrieve name of the last detection",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/max_connection_count": {
      "get": {
        "summary": "Retrieve maximum number of connected hosts",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stats"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/max_connection_count/daily": {
      "get": {
        "summary": "Retrieve maximum number of connected hosts in the last 24 hours",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/max_connection_count/monthly": {
      "get": {
        "summary": "Retrieve maximum number of connected hosts in the last month",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/max_connection_count/weekly": {
      "get": {
        "summary": "Retrieve maximum number of connected hosts in the last week",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/max_transaction_latency": {
      "get": {
        "summary": "Retrieve maximum transaction latency",
        "description": "Transaction latency in milliseconds",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stats"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/max_transaction_latency/daily": {
      "get": {
        "summary": "Retrieve maximum transaction latency in the last 24 hours",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/max_transaction_latency/monthly": {
      "get": {
        "summary": "Retrieve maximum transaction latency in the last month",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/max_transaction_latency/weekly": {
      "get": {
        "summary": "Retrieve maximum transaction latency in the last week",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/min_transaction_latency": {
      "get": {
        "summary": "Retrieve minimum transaction latency",
        "description": "Transaction latency in milliseconds",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stats"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/min_transaction_latency/daily": {
      "get": {
        "summary": "Retrieve minimum transaction latency in the last 24 hours",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/min_transaction_latency/monthly": {
      "get": {
        "summary": "Retrieve minimum transaction latency in the last month",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/min_transaction_latency/weekly": {
      "get": {
        "summary": "Retrieve minimum transaction latency in the last week",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/transaction_count": {
      "get": {
        "summary": "Retrieve number of transactions in different periods",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatsTotal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/transaction_count/daily": {
      "get": {
        "summary": "Retrieve number of transactions in the last 24 hours",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/transaction_count/monthly": {
      "get": {
        "summary": "Retrieve number of transactions in the last month",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/transaction_count/total": {
      "get": {
        "summary": "Retrieve current number of transactions",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/scan_service/transaction_count/weekly": {
      "get": {
        "summary": "Retrieve number of transactions in the last week",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type":"integer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/subscription": {
      "get": {
        "summary": "Retrieve subscription status",
        "description": "Fetches the subscription status.",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expiry_date": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date when the subscription expires.",
                      "example": "2000-01-01T00:00:00Z"
                    },
                    "is_valid": {
                      "type": "boolean",
                      "description": "Indicates whether the subscription is valid."
                    },
                    "product_variant": {
                      "type": "string",
                      "description": "The product variant associated with the subscription.",
                      "example": "atlant-basic"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/subscription/expiry_date": {
      "get": {
        "summary": "Retrieve subscription expiration date",
        "description": "Expiration date in ISO 8601 format",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date when the subscription expires.",
                  "example": "2000-01-01T00:00:00Z"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/subscription/is_valid": {
      "get": {
        "summary": "Indicates whether the subscription is valid",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    },
    "/api/atlant/stats/v1/subscription/product_variant": {
      "get": {
        "summary": "Retrieve the product variant associated with the subscription.",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "atlant-basic"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "408": {
            "$ref": "#/components/responses/408"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "DomainId": {
        "name": "DOMAIN",
        "in": "path",
        "required": true,
        "description": "JSON-string (i.e. quoted string) of external domain's audience value.",
        "schema": {
          "type": "string"
        },
        "example": "\"ext_domain_audience\""
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request. The response body may contain more detailed description.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MgmtError"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized. Generally means that the request does not have valid authentication token. The response body may contain more detailed description.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MgmtError"
            }
          }
        }
      },
      "404": {
        "description": "Not found. Requested setting can not be found. The response body may contain more detailed description.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MgmtError"
            }
          }
        }
      },
      "408": {
        "description": "Request Timeout. The time limit is reached. The response body may contain more detailed description.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MgmtError"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error. The response body may contain more detailed description, but it is better to login to the server, check journal, services, etc.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MgmtError"
            }
          }
        }
      },
      "503": {
        "description": "Service Unavailable. This error is returned if internal connection limits are reached.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MgmtError"
            }
          }
        }
      }
    },
    "schemas": {
      "ClientScopes": {
        "type": "array",
        "title": "Client scopes",
        "items": {
          "type": "string"
        },
        "description": "List of client scopes"
      },
      "ClientsList": {
        "title": "Clients list",
        "type": "object",
        "properties": {
          "clients": {
            "description": "List of clients.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "client_id": {
                  "description": "Client ID.",
                  "type": "string"
                },
                "scopes": {
                  "$ref": "#/components/schemas/ClientScopes"
                },
                "remote": {
                  "description": "Client created via Policy Manager.",
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "UpdateResponse": {
        "type": "object",
        "title": "Update response",
        "properties": {
          "status": {
            "type": "string"
          },
          "result": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "updates_available": {
                    "type": "boolean",
                    "description": "The field indicates whether the request resulted in installing one or more updates"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string",
                    "description": "Description if update is status is 'failure'"
                  }
                }
              }
            ]
          }
        }
      },
      "License": {
        "type": "object",
        "title": "License configuration",
        "properties": {
          "content": {
            "type": "string",
            "description": "Base64-encoded license."
          },
          "remote_license_key": {
            "type": "string",
            "description": "Can be configured only via Elements Portal.",
            "default": ""
          },
          "type": {
            "type": "string",
            "enum": [
              "key",
              "file"
            ],
            "default": "key"
          }
        },
        "example": {
          "content": "WFhYWC1YWFhYLVhYWFgtWFhYWC1YWFhY",
          "remote_license_key": "",
          "type": "key"
        }
      },
      "AuthorizationSettings": {
        "type": "object",
        "title": "Authorization settings",
        "properties": {
          "external_domains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalDomain"
            }
          },
          "https_endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EndpointSettings"
            }
          }
        }
      },
      "ExternalDomain": {
        "title": "External authorization domain settings",
        "type": "object",
        "properties": {
          "audience": {
            "type": "string"
          },
          "issuer": {
            "type": "string"
          },
          "signing_method": {
            "$ref": "#/components/schemas/SigningMethod"
          },
          "verification_key": {
            "$ref": "#/components/schemas/VerificationKey"
          }
        },
        "required": [
          "domain",
          "issuer",
          "signing_method",
          "verification_key"
        ]
      },
      "EndpointSettings": {
        "title": "Endpoint settings",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "format": "ipv4",
            "example": "0.0.0.0"
          },
          "port": {
            "type": "integer",
            "example": 12080
          }
        },
        "required": [
          "address",
          "port"
        ]
      },
      "VerificationKey": {
        "type": "string",
        "title": "Verification key",
        "example": "cGFzc3dvcmQK",
        "description": "Base64-encoded verification key. In case of RS256, the content of PEM file (PKCS1 or PKCS8 keys) should also be Base64-encoded."
      },
      "SigningMethod": {
        "type": "string",
        "title": "Signing method",
        "enum": [
          "HS256",
          "RS256"
        ]
      },
      "ActionEnum": {
        "type": "string",
        "title": "Action on a threat",
        "enum": [
          "remove",
          "rename",
          "none"
        ]
      },
      "Actions": {
        "type": "object",
        "title": "Actions settings",
        "properties": {
          "malware": {
            "$ref": "#/components/schemas/ActionEnum",
            "default": "rename"
          },
          "pua": {
            "$ref": "#/components/schemas/ActionEnum",
            "default": "none"
          },
          "spam": {
            "$ref": "#/components/schemas/ActionEnum",
            "default": "none"
          },
          "suspected": {
            "$ref": "#/components/schemas/ActionEnum",
            "default": "none"
          }
        }
      },
      "FsanalyzeSettings": {
        "type": "object",
        "title": "Manual scanning settings",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/Actions"
          },
          "archive_max_nested": {
            "type": "integer",
            "description": "Maximum nested level of archives to scan.",
            "default": 5
          },
          "block_archive_max_nested": {
            "type": "boolean",
            "description": "Block archives exceeding the maximum nested level.",
            "default": false
          },
          "block_encrypted_archives": {
            "type": "boolean",
            "description": "Block encrypted archives.",
            "default": false
          },
          "detect_pua": {
            "type": "boolean",
            "description": "Detect potentially unwanted applications.",
            "default": true
          },
          "detect_spam": {
            "type": "boolean",
            "description": "Detect spam.",
            "default": false
          },
          "scan_archives": {
            "type": "boolean",
            "description": "Enable scanning of archives.",
            "default": false
          }
        },
        "required": [
          "actions",
          "archive_max_nested",
          "block_archive_max_nested",
          "block_encrypted_archives",
          "detect_pua",
          "detect_spam",
          "scan_archives"
        ]
      },
      "HttpProxySettings": {
        "type": "object",
        "title": "Http proxy settings",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "host": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          }
        },
        "example": {
          "enabled": true,
          "host": "example.com",
          "password": "example-password",
          "port": 3128,
          "username": "example-user"
        },
        "required": [
          "enabled",
          "host",
          "port"
        ]
      },
      "ManagementSettings": {
        "type": "object",
        "title": "Management settings",
        "properties": {
          "https_endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EndpointSettings"
            }
          }
        }
      },
      "ForbiddenUriCategories": {
        "type": "object",
        "title": "Forbidden URI categories",
        "properties": {
          "abortion": {
            "type": "boolean"
          },
          "adserving": {
            "type": "boolean"
          },
          "adult": {
            "type": "boolean"
          },
          "alcohol_and_tobacco": {
            "type": "boolean"
          },
          "anonymizers": {
            "type": "boolean"
          },
          "auctions": {
            "type": "boolean"
          },
          "banking": {
            "type": "boolean"
          },
          "blogs": {
            "type": "boolean"
          },
          "chat": {
            "type": "boolean"
          },
          "dating": {
            "type": "boolean"
          },
          "disturbing": {
            "type": "boolean"
          },
          "drugs": {
            "type": "boolean"
          },
          "entertainment": {
            "type": "boolean"
          },
          "file_sharing": {
            "type": "boolean"
          },
          "forum": {
            "type": "boolean"
          },
          "gambling": {
            "type": "boolean"
          },
          "games": {
            "type": "boolean"
          },
          "hate": {
            "type": "boolean"
          },
          "illegal": {
            "type": "boolean"
          },
          "job_search": {
            "type": "boolean"
          },
          "paymentservice": {
            "type": "boolean"
          },
          "search_engines": {
            "type": "boolean"
          },
          "shopping": {
            "type": "boolean"
          },
          "social_networking": {
            "type": "boolean"
          },
          "software_download": {
            "type": "boolean"
          },
          "spam": {
            "type": "boolean"
          },
          "streaming_media": {
            "type": "boolean"
          },
          "tracking_cookie": {
            "type": "boolean"
          },
          "tracking_domain": {
            "type": "boolean"
          },
          "tracking_object": {
            "type": "boolean"
          },
          "tracking_script": {
            "type": "boolean"
          },
          "travel": {
            "type": "boolean"
          },
          "violence": {
            "type": "boolean"
          },
          "warez": {
            "type": "boolean"
          },
          "weapons": {
            "type": "boolean"
          },
          "webmail": {
            "type": "boolean"
          }
        }
      },
      "IcapSettings": {
        "type": "object",
        "title": "ICAP settings",
        "properties": {
          "block_archive_max_nested": {
            "type": "boolean"
          },
          "block_encrypted_archives": {
            "type": "boolean"
          },
          "detect_pua": {
            "type": "boolean"
          },
          "scan_archives": {
            "type": "boolean"
          },
          "trickle": {
            "$ref": "#/components/schemas/IcapTrickleSettings"
          }
        },
        "example": {
          "block_archive_max_nested": true,
          "block_encrypted_archives": true,
          "detect_pua": true,
          "scan_archives": true,
          "trickle": {
            "enabled": true,
            "interval": 30,
            "max_bytes": 120,
            "start_delay": 0
          }
        }
      },
      "IcapTrickleSettings": {
        "type": "object",
        "title": "ICAP trickle settings",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "interval": {
            "type": "integer"
          },
          "max_bytes": {
            "type": "integer"
          },
          "start_delay": {
            "type": "integer"
          }
        },
        "example": {
          "enabled": true,
          "interval": 30,
          "max_bytes": 120,
          "start_delay": 0
        }
      },
      "MaxLimitSettings": {
        "type": "object",
        "title": "Max limit setting",
        "properties": {
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "limit": {
            "type": "integer",
            "minimum": 0,
            "example": 1000
          }
        }
      },
      "ReputationSettings": {
        "type": "object",
        "title": "Reputation check settings",
        "properties": {
          "file_check": {
            "type": "boolean",
            "example": true
          },
          "timeout": {
            "type": "integer",
            "minimum": 0,
            "example": 5
          },
          "url_check": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "LoggingSettings": {
        "type": "object",
        "title": "Logging settings",
        "properties": {
          "icap": {
            "$ref": "#/components/schemas/IcapLoggingSettings"
          },
          "https": {
            "$ref": "#/components/schemas/HttpsLoggingSettings"
          },
          "ip_address": {
            "type": "boolean"
          },
          "rotation": {
            "$ref": "#/components/schemas/LoggingRotationSettings"
          }
        },
        "example": {
          "https": {
            "request_headers": [
              "User-Agent"
            ]
          },
          "icap": {
            "encapsulated_request_headers": [
              "User-Agent"
            ],
            "encapsulated_response_headers": [
              "ETag"
            ],
            "request_headers": [
              "X-Client-Username"
            ]
          },
          "ip_address": true,
          "rotation": {
            "file_size": {
              "enabled": true,
              "limit": 10000000
            },
            "max_bytes": {
              "enabled": false,
              "limit": 100000000
            },
            "max_days": {
              "enabled": false,
              "limit": 30
            },
            "max_files": {
              "enabled": true,
              "limit": 10
            }
          }
        }
      },
      "IcapLoggingSettings": {
        "type": "object",
        "title": "ICAP logging settings",
        "properties": {
          "encapsulated_request_headers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "encapsulated_response_headers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "request_headers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "example": {
          "encapsulated_request_headers": [
            "User-Agent"
          ],
          "encapsulated_response_headers": [
            "ETag"
          ],
          "request_headers": [
            "X-Client-Username"
          ]
        }
      },
      "HttpsLoggingSettings": {
        "type": "object",
        "title": "HTTPS logging settings",
        "properties": {
          "request_headers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "example": {
          "request_headers": [
            "User-Agent"
          ]
        }
      },
      "LoggingRotationSettings": {
        "type": "object",
        "title": "Logging rotation settings",
        "properties": {
          "file_size": {
            "$ref": "#/components/schemas/MaxLimitSettings"
          },
          "max_bytes": {
            "$ref": "#/components/schemas/MaxLimitSettings"
          },
          "max_days": {
            "$ref": "#/components/schemas/MaxLimitSettings"
          },
          "max_files": {
            "$ref": "#/components/schemas/MaxLimitSettings"
          }
        },
        "example": {
          "file_size": {
            "enabled": true,
            "limit": 10000000
          },
          "max_bytes": {
            "enabled": false,
            "limit": 100000000
          },
          "max_days": {
            "enabled": false,
            "limit": 30
          },
          "max_files": {
            "enabled": true,
            "limit": 10
          }
        }
      },
      "ScanningSettings": {
        "type": "object",
        "title": "Scanning settings",
        "properties": {
          "archive_max_nested": {
            "type": "integer",
            "description": "Maximum nested level of archives to scan.",
            "default": 5
          },
          "forbidden_uri_categories": {
            "$ref": "#/components/schemas/ForbiddenUriCategories"
          },
          "https_endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EndpointSettings"
            }
          },
          "icap": {
            "$ref": "#/components/schemas/IcapSettings"
          },
          "icap_endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EndpointSettings"
            }
          },
          "keepalive_time": {
            "type": "integer",
            "description": "Keepalive time in seconds.",
            "default": 600
          },
          "logging": {
            "$ref": "#/components/schemas/LoggingSettings"
          },
          "max_scan_size": {
            "$ref": "#/components/schemas/MaxLimitSettings"
          },
          "max_scan_time": {
            "type": "integer",
            "description": "Maximum scan time in seconds.",
            "default": 90
          },
          "reputation": {
            "$ref": "#/components/schemas/ReputationSettings"
          }
        }
      },
      "UpdateRegimeSettings": {
        "title": "Update regime settings",
        "description": "When to apply automatic updates. on_arrival means updates are installed immediately after they are downloaded, at_date means updates are installed at a specific date and time, and with_repetition means updates are installed periodically.",
        "type": "string",
        "enum": [
          "on_arrival",
          "at_date",
          "with_repetition"
        ]
      },
      "Days": {
        "type": "string",
        "title": "Update days",
        "enum": [
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday",
          "sunday",
          "daily"
        ]
      },
      "UpdateRepetitionSettings": {
        "title": "Update repetition settings",
        "type": "object",
        "description": "Apply available updates periodically.",
        "properties": {
          "day": {
            "$ref": "#/components/schemas/Days"
          },
          "time_of_day": {
            "type": "string",
            "description": "Time of day in HH:MM format in endpoint's time zone."
          }
        }
      },
      "UpdatesScheduleSettings": {
        "type": "object",
        "title": "Updates schedule settings",
        "properties": {
          "at_date_schedule": {
            "type": "integer",
            "description": "Apply available updates at a specific date and time. Unix timestamp in seconds in UTC."
          },
          "regime": {
            "$ref": "#/components/schemas/UpdateRegimeSettings"
          },
          "repetition_schedule": {
            "$ref": "#/components/schemas/UpdateRepetitionSettings"
          }
        }
      },
      "UpdateSettings": {
        "type": "object",
        "title": "Updates settings",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "product_version": {
            "type": "string",
            "description": "Update and pin channels to the specified release group.",
            "default": ""
          },
          "schedule": {
            "$ref": "#/components/schemas/UpdatesScheduleSettings"
          },
          "use_tls": {
            "type": "boolean",
            "description": "Use TLS to communicate with the update server"
          }
        },
        "example": {
          "enabled": true,
          "product_version": "atlant_pilot",
          "schedule": {
            "at_date_schedule": 1566565044,
            "regime": "on_arrival",
            "repetition_schedule": {
              "day": "monday",
              "time_of_day": "23:45"
            }
          },
          "use_tls": true
        }
      },
      "TlsSettings": {
        "type": "object",
        "title": "TLS settings",
        "description": "TLS settings for Atlant APIs.",
        "properties": {
          "certificate": {
            "type": "string",
            "format": "base64"
          },
          "key": {
            "type": "string",
            "format": "base64"
          }
        },
        "example": {
          "certificate": "a2V5Cg==",
          "key": "Y2VydGlmaWNhdGU="
        }
      },
      "Stats": {
        "type": "object",
        "title": "Statistics with periods",
        "properties": {
          "daily": {
            "type": "integer"
          },
          "monthly": {
            "type": "integer"
          },
          "weekly": {
            "type": "integer"
          }
        },
        "example": {
          "daily": 10,
          "monthly": 20,
          "weekly": 15
        }
      },
      "StatsTotal": {
        "type": "object",
        "title": "Statistics with total",
        "properties": {
          "daily": {
            "type": "integer"
          },
          "monthly": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "weekly": {
            "type": "integer"
          }
        },
        "example": {
          "daily": 10,
          "monthly": 20,
          "total": 100,
          "weekly": 15
        }
      },
      "MgmtError": {
        "title": "Error response body",
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "message"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}